package FindPrimes;

import java.util.Scanner; // For INPUT operations.
import java.io.*;

/**
 * Program to test the class PrimeFinder. Takes filenames as arguments and
 * scans the file the replaces the file with primes. Will also take manual
 * input if no arguments entered.
 * @author Patrick Martinez
 */
public class TestDriver {

	public static void main(String[] args) {
		
		// Default value
		final int DEFAULT_SIZE = 1000;

		int input = DEFAULT_SIZE;
		String primeString;
		
		// IO Operations
	
		// No arguments
		if (args.length == 0 || args == null) {
			System.out.print("Enter the upper limit for the prime finder "
					+ "(Default " + DEFAULT_SIZE + "):");
			
			try {
				Scanner sc = new Scanner (System.in);
				input = sc.nextInt();
				sc.close();
			}
			catch(Exception ex) {
				System.out.println("Error on input block!");
				System.out.println("Setting input to default " + DEFAULT_SIZE
						+ "!");
			}
			
			boolean[] primeList = PrimeFinder.primeCalculator(input);
			primeString = primeString(primeList);
			primePrint(primeString);
		}
		
		// Filename in arguments
		else {
			String filename = args[0];
			
			try {
				// Get input
				File inputFile = new File(filename);
				Scanner sc = new Scanner(inputFile);
				input = sc.nextInt();

				
				// Run primeFinder and make string
				boolean[] primeList = PrimeFinder.primeCalculator(input);
				primeString = primeString(primeList);				
				
				// Write prime string to file.
				PrintWriter outFile = new PrintWriter(filename);
				outFile.write(primeString);
				outFile.close();
				primePrint(primeString);
				}
			catch(FileNotFoundException e) {
				System.out.println("File not found! Check that file is in project subdirectory (eclipse) or in the same folder.");
			}
		}		
	}
	
	/**
	 * Prints out the primes generated by primeCalculator
	 * @param input upper limit for primeGenerator
	 */
	public static void primePrint (String primeString) {
		
		System.out.print("Primes: ");
		System.out.println(primeString);		
	}
	
	/**
	 * Returns a string containing only prime ints.
	 * @param input upper limit for primeCalculator
	 * @return Returns a string of prime numbers up to limit n
	 */
	public static String primeString (boolean[] primeList) {

		StringBuilder primeString = new StringBuilder();
		
		for (int i = 2; i < primeList.length; i++) 
			if (primeList[i])
				primeString.append(i + " ");

		return primeString.toString();
	}

}
